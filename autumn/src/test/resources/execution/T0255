module Main in execution;

import com.mackenziehigh.autumn.resources.Parent;

design Citizen (name : CharSequence);

tuple Person (name : String, children : List) extends Citizen;

@Start
defun main (args : String[]) : void
{
    # Check the Setter
    assert F::findMethod(class Person, "name", [class String]).getReturnType() == (class Person);

    # Check the Getter
    assert F::findMethod(class Person, "name", []).getReturnType() == (class String);

    # Throughput Test
    var p = new Person("Mom", ["Jet", "Fluffy"]);
    assert p.name() == "Mom";
    p = p.name("Mommy");
    assert p.name() == "Mommy";

}