module Main in execution;

functor Z () : boolean;

functor C () : char;

functor B () : byte;

functor S () : short;

functor I () : int;

functor J () : long;

functor F () : float;

functor D () : double;

functor L () : Object;


@Start
defun main (args : String[]) : void
{
    delegate z : Z => My::function1;
    delegate c : C => My::function2;
    delegate b : B => My::function3;
    delegate s : S => My::function4;
    delegate i : I => My::function5;
    delegate j : J => My::function6;
    delegate f : F => My::function7;
    delegate d : D => My::function8;
    delegate l : L => My::function9;

    assert z.invoke() == true;
    assert c.invoke() == 'X';
    assert b.invoke() == 3B;
    assert s.invoke() == 5S;
    assert i.invoke() == 7;
    assert j.invoke() == 9L;
    assert f.invoke() == 11.0F;
    assert d.invoke() == 13.0;
    assert l.invoke() == "Venus";
}

defun function1 () : boolean
{
    return true;
}

defun function2 () : char
{
    return 'X';
}

defun function3 () : byte
{
    return 3B;
}

defun function4 () : short
{
    return 5S;
}

defun function5 () : int
{
    return 7;
}

defun function6 () : long
{
    return 9L;
}

defun function7 () : float
{
    return 11.0F;
}

defun function8 () : double
{
    return 13.0;
}

defun function9 () : Object
{
    return "Venus";
}