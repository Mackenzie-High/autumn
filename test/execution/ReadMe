
This package contains tests that test the different language constructs.

Notes:
. "= N =" means the test is not done yet.
. You can use T0000 during debugging.

TODO:
. Remove T0059

Test Index
. Directives
. . Import
. . . T0357 = Basic Usage
. . . T0358 = Collision - Import Directive
. . . T0359 = Collision - Locally Declared Type
. . . T0360 = Auto Import of Local - Annotation Type
. . . T0361 = Auto Import of Local - Exception Type
. . . T0362 = Auto Import of Local - Enum Type
. . . T0363 = Auto Import of Local - Design Type
. . . T0364 = Auto Import of Local - Struct Type
. . . T0365 = Auto Import of Local - Tuple Type
. . . T0366 = Auto Import of Local - Functor Type
. . . T0060 = Auto Imported Types                             # TODO: Complete
. . Module
. . . T0355 = Annotations
. . . T0356 = Name and Namespace
. Modules
. . Reflective Testing of the Module's Class
. . Special Methods - instance()
. . Special Method - moduleInfo()
. . Special Method - moduleInvokeFunction(int, ArgumentStack)
. . Module Info
. . . T0310 = Special Method - instance()
. . . T0312 = Special Method - name()
. . . T0311 = Special Method - type()
. . . T0314 = Special Method - annotations()
. . . T0315 = Special Method - exceptions()
. . . T0316 = Special Method - enums()
. . . T0317 = Special Method - designs()
. . . T0318 = Special Method - tuples()
. . . T0319 = Special Method - structs()
. . . T0320 = Special Method - functors()
. . . T0321 = Special Method - functions()
. . . T0313 = Special Method - toString()
. . Delegates
. . . T0078 = Metadata    // TODO: fix
. . . Invocation  // TODO: fix
. Annotation Definitions
. . T0140 = Reflective Testing of the Annotation's Class
. . T0160 = Annotation Applied to Itself
. . T0161 = Annotations Applied to an Annotation
. . T0141 = Usage of a Defined Annotation - No Values
. . T0287 = Usage of a Defined Annotation - Single Value
. . T0326 = Usage of a Defined Annotation - Multiple Values
. . T0327 = Escape Sequence in Annotation Value
. Exception Definitions
. . T0164 = Applied Annotations are Present
. . T0163 = Inherited Constructors
. . T0162 = Usage of a Declared Exception
. Enum Definitions
. . T0170 = Reflective Testing of the Enum's Class
. . T0167 = Applied Annotations are Present
. . T0051 = Basic Enum
. . T0165 = Special Method - valueOf(String) - Normal Operation
. . T0168 = Special Method - valueOf(String) - Null Argument
. . T0169 = Special Method - valueOf(String) - No Such Enum Constant
. . T0166 = Special Method - values()
. Design Definitions
. . T0279 = Reflective Testing of the Tuple's Class                  // TODO: finish
. . T0280 = Inherited Elements                                       // TODO: finish
. . Covariant Elements
. Tuple Definitions
. . T0128 = Reflective Testing of the Tuple's Class                  // TODO: finish
. . T0114 = Sole Constructor
. . T0126 = Setters
. . T0117 = Getters
. . T0271 - Special Method - isStruct() and isTuple()
. . T0132 = Special Method - set(int, Object) - (index OK)
. . T0134 = Special Method - set(int, Object) - (index Out-Of-Bounds)
. . T0115 = Special Method - get(int) - (index OK)
. . T0116 = Special Method - get(int) - (index Out-Of-Bounds)
. . T0118 = Special Method - toString()
. . T0120 = Special Method - keys()
. . T0121 = Special Method - types()
. . T0119 = Special Method - values()
. . T0122 = Special Method - instance()
. . T0123 = Special Method - size() and isEmpty()
. . T0260 = Special Method - compareTo(Record) - Comparison Possible
. . T0261 = Special Method - compareTo(Record) - Non Comparable Element
. . T0256 = Special Method - equals(Object)
. . T0257 = Special Method - hashCode()
. . T0258 = Special Method - toString()
. . T0259 = Special Method - iterator()
. . T0254 - Inheritance of Elements                           // TODO: finish
. . T0255 = Covariant Elements                                // TODO: finish
. Struct Definitions
. . T0250 = Basic Test
. . Setters
. . Getters
. . No Elements
. . Different Types of Elements
. . T0272 - Special Method - isStruct() and isTuple()
. . T0268 = Special Method - keys()
. . T0269 = Special Method - types()
. . T0270 = Special Method - values()
. . Covariant Elements
. . Subtyping
. Functor Definition
. . Reflective Testing of the Functor's Class
. . T0143 = Very Basic Functor Usage
. . T0286 = Functor Usage
. . T0142 = Special Method - inner()
. . T0144 = Special Method - parameterTypes() - (non empty)
. . T0145 = Special Method - parameterTypes() - (empty)
. . T0146 = Special Method - returnType() - (non void)
. . T0147 = Special Method - returnType() - (void)
. . T0283 = Simple Inheritance
. . TO284 = Covariance - Return Type
. . T0285 = Covariance - Parameters
. Functions
. . Reflective Testing of the Reflective Method Object
. . T0064 = Checked Exceptions
. . Annotation Lists
. . Parameter Lists
. . T0063 = Return Types                   # TODO: Add array return-types to the test.
. Statements
. . Nop = No Test Needed
. . Expression = No Test Needed
. . Sequence
. . . T0110 = All Cases
. . If-Elif-Else
. . . T0001 = Primitive Boolean Condition
. . . T0002 = Boxed Boolean Condition
. . When
. . . T0111 = Primitive Boolean Condition
. . . T0112 = Boxed Boolean Condition
. . Goto
. . . T0113 = Basic Functionality (also used to test marker)
. . Marker
. . . T0113 = Basic Functionality (also used to test goto)
. . Branch
. . . T0273 = Index - int
. . . T0274 = Index - Unboxing
. . . T0275 = Index - Auto-Widening
. . . T0354 = Index - Negative
. . . T0276 = Jump Backward
. . . T0277 = Only the Default Case
. . . T0278 = Only One Case
. . While
. . . T0007 = Primitive Boolean Condition
. . . T0008 = Boxed Boolean Condition
. . . T0010 = Iterate Zero Times
. . . T0011 = Iterate One Time
. . . T0012 = Iterate Multiple Times
. . Until
. . . T0013 = Primitive Boolean Condition
. . . T0014 = Boxed Boolean Condition
. . . T0016 = Iterate Zero Times
. . . T0017 = Iterate One Time
. . . T0018 = Iterate Multiple Times
. . Do While
. . . T0171 = Primitive Boolean Condition
. . . T0172 = Boxed Boolean Condition
. . . T0173 = Iterate Zero Times
. . . T0174 = Iterate One Time
. . . T0175 = Iterate Multiple Times
. . Do Until
. . . T0176 = Primitive Boolean Condition
. . . T0177 = Boxed Boolean Condition
. . . T0178 = Iterate Zero Times
. . . T0179 = Iterate One Time
. . . T0180 = Iterate Multiple Times
. . Forever
. . . T0181 = Iterate Zero Times
. . . T0182 = Iterate One Time
. . . T0183 = Iterate Multiple Times
. . Foreach
. . . T0184 = Cast Failed
. . . T0034 = Iterate Zero Times
. . . T0035 = Iterate One Time
. . . T0036 = Iterate Multiple Times
. . . T0185 = Operand-Stack Leakage
. . . T0186 = Exception in Body
. . For
. . . T0037 = Iterate Zero Times
. . . T0038 = Iterate One Time
. . . T0039 = Iterate Multiple Times
. . . T0187 = Primitive Boolean Condition
. . . T0188 = Boxed Boolean Condition
. . . T0189 = Boxed Initializer
. . . T0190 = Boxed Modifier
. . . T0191 = Operand-Stack Leakage
. . Break
. . . T0192 = Within Forever-Loop
. . . T0193 = Within While-Loop
. . . T0194 = Within Until-Loop
. . . T0195 = Within Do-While-Loop
. . . T0196 = Within Do-Until-Loop
. . . T0197 = Within For-Loop
. . . T0198 = Within Foreach-Loop
. . Continue
. . . T0199 = Within Forever-Loop
. . . T0200 = Within While-Loop
. . . T0201 = Within Until-Loop
. . . T0202 = Within Do-While-Loop
. . . T0203 = Within Do-Until-Loop
. . . T0204 = Within For-Loop
. . . T0205 = Within Foreach-Loop
. . Redo
. . . T0206 = Within Forever-Loop
. . . T0207 = Within While-Loop
. . . T0208 = Within Until-Loop
. . . T0209 = Within Do-While-Loop
. . . T0210 = Within Do-Until-Loop
. . . T0211 = Within For-Loop
. . . T0212 = Within Foreach-Loop
. . Var
. . . T0076 = Different Types of Values
. . Val
. . . T0077 = Different Types of Values
. . Let
. . . T0075 = Different Types of Values
. . . T0072 = Auto Boxing
. . . T0073 = Auto Unboxing
. . . T0338 = Coercion
. . Try Catch
. . . T0049 = Single Case - No Catch Needed
. . . T0050 = Single Case - Caught
. . . T0340 = Single Case - Propagated
. . . T0341 = Multiple Cases - No Catch Needed
. . . T0342 = Multiple Cases - Caught
. . . T0343 = Multiple Cases - Propagated
. . . T0345 = Handler Specificity
. . . T0344 = Handler Reordering
. . Throw
. . . T0061 = Checked Exceptions
. . . T0062 = Unchecked Exceptions
. . . T0339 = Null Argument
. . Assert
. . . T0352 = Condition - Auto Unboxing
. . . T0346 = No Message
. . . T0347 = With Message
. . Assume
. . . T0353 = Condition - Auto Unboxing
. . . T0348 = Enabled - No Message
. . . T0349 = Enabled - With Message
. . . T0350 = Disabled - No Side Effects - No Message
. . . T0351 = Disabled - No Side Effects - With Message
. . Delegate
. . . T0153 = No Parameters
. . . T0154 = Single Parameter
. . . T0155 = Multiple Parameters
. . . T0156 = Different Types of Parameters
. . . T0376 = Different Types of Return-Types
. . . T0383 = Apply - Arguments - Auto Boxing
. . . T0384 = Apply - Arguments - Auto Unboxing
. . . T0385 = Apply - Arguments - Coercion
. . . T0393 = Apply - Arguments - Wrong Type - boolean
. . . T0394 = Apply - Arguments - Wrong Type - char
. . . T0395 = Apply - Arguments - Wrong Type - byte
. . . T0396 = Apply - Arguments - Wrong Type - short
. . . T0397 = Apply - Arguments - Wrong Type - int
. . . T0398 = Apply - Arguments - Wrong Type - long
. . . T0399 = Apply - Arguments - Wrong Type - float
. . . T0400 = Apply - Arguments - Wrong Type - double
. . . T0401 = Apply - Arguments - Wrong Type - Object
. . . T0390 = Apply - From Object - Auto Boxing
. . . T0391 = Apply - From Object - Auto Unboxing
. . . T0392 = Apply - From Object - Coercion
. . . T0386 = Apply - Checked Exceptions
. . . T0387 = Invoke - Checked Exceptions
. . . T0377 = Special Method - module()
. . . T0378 = Special Method - owner()
. . . T0379 = Special Method - name()
. . . T0380 = Special Method - returnType()
. . . T0381 = Special Method - parameterTypes()
. . . T0382 = Special Method - method()
. . . T0389 = Special Method - toString()
. . . T0388 = Operand-Stack Leakage
. . Lambda
. . . Reflective Testing of the Lambda's Type
. . . T0282 = Basic                                       // TODO: finish
. . . Multiple Lambdas in the Same Function
. . . T0307 = Checked Exceptions
. . . T0304 = Different Types of Arguments
. . . T0305 = Different Types of Captured Variables
. . . T0308 = Operand Stack Leakage
. . . T0306 = Special Method - file() & line() & column()
. . . T0302 = Special Method - returnType()
. . . T0303 = Special Method - parameterTypes()
. . . Special Method - closure()
. . . T0308 = Special Method - toString()
. . Return Void
. . . T0334 = Early Exit
. . . T0333 = Memoization
. . Return Value
. . . T0331 = Early Exit
. . . T0053 = Different Types of Return Values
. . . T0328 = Auto Boxing
. . . T0329 = Auto Unboxing
. . . T0330 = Auto Coercions
. . Recur
. . . T0372 = Very Deep Recursion
. . . T0367 = Parameter Count - None
. . . T0368 = Parameter Count - Single
. . . T0369 = Parameter Count - Multiple
. . . T0370 = Return Type - Void
. . . T0371 = Return Type - Non Void
. . . T0373 = Arguments - Auto Boxing
. . . T0374 = Arguments - Auto Unboxing
. . . T0375 = Arguments - Coercion
. Expressions
. . Dispatch
. . . T0301 = Very Basic Usage
. . . T0710 = Resolution Order
. . . T0706 = Auto Boxing
. . . T0707 = Return Type - Same
. . . T0708 = Return Type - Different
. . . T0713 = Return Type - Primitive
. . . T0711 = Return Type - Void
. . . T0709 = Dispatch Failed
. . . T0712 = Recursive
. . New
. . . T0213 = Different Types of Arguments
. . . T0214 = Resolution Order
. . . T0215 = Auto-Widening
. . . T0216 = Auto-Boxing
. . . T0217 = Auto-Unboxing
. . Call Static Method
. . . T0224 = Different Types of Arguments
. . . T0225 = Resolution Order
. . . T0228 = Auto-Widening
. . . T0226 = Auto-Boxing
. . . T0227 = Auto-Unboxing
. . . T0253 = Infer Return Type
. . Call Method
. . . T0229 = Different Types of Arguments
. . . T0233 = Resolution Order
. . . T0230 = Auto-Widening
. . . T0231 = Auto-Boxing
. . . T0232 = Auto-Unboxing
. . . T0234 = Covariant Return Types
. . Set Static Field
. . . T0235 = Different Types of Values - (also used to test get-static-field)
. . . T0240 = Auto-Boxing
. . . T0241 = Auto-Unboxing
. . . T0242 = Auto-Widening
. . Get Static Field
. . . T0235 = Different Types of Values - (also used to test set-static-field)
. . Set Field
. . . T0236 = Different Types of Values
. . . T0237 = Auto-Boxing
. . . T0238 = Auto-Unboxing
. . . T0239 = Auto-Widening
. . Get Field
. . . T0236 = Different Types of Values
. . Instance-Of
. . . T0046 = All Cases
. . Ternary Conditional
. . . T0243 = Primitive Boolean Condition
. . . T0244 = Boxed Boolean Condition
. . . T0245 = Distinctly Typed Operands
. . . T0246 = Primitive Operands
. . . T0247 = Object Operands
. . Locals
. . . T0249 = All Cases
. . Once
. . . Normal
. . Progn
. . . T0335 = Basic Usage
. . . T0336 = Operand Stack Leakage
. . List Literals
. . . T0058 = Basic Usage
. . . T0337 = Operand Stack Leakage
. . List Comprehensions
. . . T0291 = Basic Usage
. . . T0292 = Conditional
. . . T0293 = Auto-Boxing of Modifier
. . . T0300 = Auto-Unboxing of Condition
. . . T0294 = Nested in Iterable
. . . T0295 = Nested in Modifier
. . . T0296 = Nested in Condition
. . . T0297 = Wrong Type from Iterable
. . . T0298 = Iterable is Null
. . . T0299 = Operand Stack Leakage
. Operators
. . T0100 = Operator Unboxing
. . T0109 = Operator Primitive-To-Primitive Coercion
. . T0099 = Negate Operator
. . T0040 = Not Operator
. . T0041 = Division Operator - Normal
. . T0402 = Division Operator - Division by Zero
. . T0083 = Modulo Operator - Normal
. . T0403 = Modulo Operator - Division by Zero
. . T0084 = Multiply Operator
. . T0085 = Add Operator
. . T0086 = Subtract Operator
. . T0101 = Concat Operator
. . T0087 = Equality Operator
. . T0088 = Inequality Operator
. . T0089 = Greater Operator
. . T0090 = Less Operator
. . T0091 = Greater-Equals Operator
. . T0092 = Less-Equals Operator
. . T0093 = AND Operator - Truth Table
. . T0097 = AND Operator - Short Circuiting
. . T0094 = OR Operator - Truth Table
. . T0098 = OR Operator - Short Circuiting
. . T0095 = XOR Operator
. . T0096 = Implies Operator - Truth Table
. . T0248 = Implies Operator - Short Circuiting
. . T0043 = Null Coalescing Operator
. . As
. . . T0044 = Operand-Stack Leakage
. . . T0102 = Predefined Conversions
. . . T0057 = Casts
. . . T0105 = Array Casts
. . . T0106 = Failed Cast
. . Is
. . . T0082 = Operand-Stack Leakage
. . . T0103 = Predefined Conversions
. . . T0104 = Casts
. . . T0108 = Array Casts
. . . T0107 = Failed Cast
. Datums
. . T0221 = Class Datums
. . T0055 = Types of Datums
. . T0056 = Values of Datums
. . T0324 = BigInteger Datums
. . T0325 = BigDecimal Datums
. . T0220 = Strings
. . T0222 = Null
. . Variables
. . . T0223 = Default Value



Standard Library
. autumn.util.F
. . all
. . . T0404 = null condition
. . . T0405 = null elements
. . . T0406 = normal
. . any
. . . T0407 = null condition
. . . T0408 = null elements
. . . T0409 = normal
. . apply
. . . T0410 = null functor
. . . T0411 = null arguments
. . . T0412 = len(arguments) != len(parameters)
. . . T0413 = normal
. . async
. . . T0414 = null action
. . . normal
. . average
. . . T0415 = null values (variable)
. . . T0416 = null value  (element)
. . . T0417 = incompatible argument
. . . T0418 = normal
. . big
. . . T0419 = null argument
. . . T0421 = normal
. . compare
. . . T0422 = normal
. . count
. . . T0423 = null condition
. . . T0424 = null iterable
. . . T0425 = normal
. . decodeJson
. . . T0426 = null module
. . . T0427 = null string
. . . T0705 = normal
. . . ambiguity
. . defaultValueOf
. . . T0428 = null argument
. . . T0429 = void-type
. . . T0430 = normal
. . encodeJson
. . . unexpected type
. . . T0704 = normal
. . enumerate
. . . T0433 = null iterable
. . . T0434 = normal
. . escape
. . . T0435 = null argument
. . . T0436 = bad escape sequence     // TODO
. . . T0437 = normal                  // TODO
. . filter
. . . T0438 = null condition
. . . T0439 = null elements
. . . T0440 = normal
. . find
. . . T0441 = null condition
. . . T0442 = null elements
. . . T0443 = negative skip
. . . T0444 = normal
. . findAnnotation
. . . T0445 = null annotatable
. . . T0446 = null type
. . . T0447 = found
. . . T0448 = not found
. . findConstructor
. . . T0449 = null owner
. . . T0450 = null formals
. . . T0452 = found
. . . T0453 = not found
. . findField
. . . T0454 = null owner
. . . T0455 = null name
. . . T0456 = found
. . . T0457 = not found
. . findMethod
. . . T0458 = null owner
. . . T0459 = null name
. . . T0460 = null formals
. . . T0462 = found
. . . T0463 = not found
. . first
. . . T0464 = null argument
. . . T0465 = normal
. . format
. . . T0466 = null string
. . . T0467 = null arguments
. . . T0468 = normal
. . get
. . . T0469 = null boolean[]
. . . T0470 = null char[]
. . . T0471 = null byte[]
. . . T0472 = null short[]
. . . T0473 = null int[]
. . . T0474 = null long[]
. . . T0475 = null float[]
. . . T0476 = null double[]
. . . T0477 = null BigInteger[]
. . . T0478 = null BigDecimal[]
. . . T0479 = null String[]
. . . T0480 = null Object[]
. . . T0481 = null List
. . . T0484 = null Map
. . . T0485 = null Annotation
. . . T0482 = null Record - int key
. . . T0483 = null Record - String key
. . . T0486 = normal - boolean[]
. . . T0487 = normal - char[]
. . . T0488 = normal - byte[]
. . . T0489 = normal - short[]
. . . T0490 = normal - int[]
. . . T0491 = normal - long[]
. . . T0492 = normal - float[]
. . . T0493 = normal - double[]
. . . T0494 = normal - BigInteger[]
. . . T0495 = normal - BigDecimal[]
. . . T0496 = normal - String[]
. . . T0497 = normal - Object[]
. . . T0498 = normal - List
. . . T0499 = normal - Map
. . . T0500 = normal - Annotation
. . . T0501 = normal - Record - int key
. . . T0502 = normal - Record - String key
. . hash
. . . T0503 = normal
. . immutable
. . . T0504 = null - Iterable
. . . T0505 = null - List
. . . T0506 = null - Set
. . . T0507 = null - Map
. . . T0508 = normal - Iterable
. . . T0509 = normal - List
. . . T0510 = normal - Set
. . . T0511 = normal - Map
. . isAnnotationType
. . . T0512 = null argument
. . . T0513 = normal
. . isAssignableTo
. . . T0534 = normal
. . isDesignType
. . . T0516 = null argument
. . . T0517 = normal
. . isEnumType
. . . T0518 = null argument
. . . T0519 = normal
. . isExceptionType
. . . T0520 = null argument
. . . T0521 normal
. . isFunctorType
. . . T0522 = null argument
. . . T0523 = normal
. . isModuleType
. . . T0526 = null argument
. . . T0527 = normal
. . isRecordType
. . . T0528 = null argument
. . . T0529 = normal
. . isStructType
. . . T0530 = null argument
. . . T0531 = normal
. . isSubtypeOf
. . . T0535 = normal
. . isTupleType
. . . T0532 = null argument
. . . T0533 = normal
. . iter
. . . T0536 = null argument - boolean[]
. . . T0537 = null argument - char[]
. . . T0538 = null argument - byte[]
. . . T0539 = null argument - short[]
. . . T0540 = null argument - int[]
. . . T0541 = null argument - long[]
. . . T0542 = null argument - float[]
. . . T0543 = null argument - double[]
. . . T0544 = null argument - Object[]
. . . T0545 = null argument - Iterable
. . . T0546 = null argument - Map
. . . T0547 = null argument - Record
. . . T0548 = null argument - Annotation
. . . T0563 = null argument - Iterator
. . . T0549 = normal - boolean[]
. . . T0550 = normal - char[]
. . . T0551 = normal - byte[]
. . . T0552 = normal - short[]
. . . T0553 = normal - int[]
. . . T0554 = normal - long[]
. . . T0555 = normal - float[]
. . . T0556 = normal - double[]
. . . T0557 = normal - Object[]
. . . T0558 = normal - Iterable - List
. . . T0559 = normal - Iterable - Set
. . . T0560 = normal - Map
. . . T0561 = normal - Record
. . . T0562 = normal - Annotation
. . . T0564 = normal - Iterator
. . last
. . . T0565 = null argument
. . . T0566 = normal
. . len
. . . T0567 = null argument - boolean[]
. . . T0568 = null argument - char[]
. . . T0569 = null argument - byte[]
. . . T0570 = null argument - short[]
. . . T0571 = null argument - int[]
. . . T0572 = null argument - long[]
. . . T0573 = null argument - float[]
. . . T0574 = null argument - double[]
. . . T0575 = null argument - Object[]
. . . T0576 = null argument - String
. . . T0577 = null argument - Collection
. . . T0578 = null argument - Map
. . . T0579 = null argument - Record
. . . T0580 = null argument - Annotation
. . . T0581 = normal - boolean[]
. . . T0582 = normal - char[]
. . . T0583 = normal - byte[]
. . . T0584 = normal - short[]
. . . T0585 = normal - int[]
. . . T0586 = normal - long[]
. . . T0587 = normal - float[]
. . . T0588 = normal - double[]
. . . T0589 = normal - Object[]
. . . T0590 = normal - String
. . . T0591 = normal - Collection
. . . T0592 = normal - Map
. . . T0593 = normal - Record
. . . T0594 = normal - Annotation
. . map
. . . T0595 = null functor
. . . T0596 = null iterable
. . . T0597 = normal
. . maximum
. . . T0598 = null values
. . . T0599 = normal
. . minimum
. . . T0600 = null values
. . . T0601 = normal
. . mutable
. . . T0602 = null - Iterable
. . . T0603 = null - List
. . . T0604 = null - Set
. . . T0605 = null - Map
. . . T0606 = normal - Iterable
. . . T0607 = normal - List
. . . T0608 = normal - Set
. . . T0609 = normal - Map
. . newArray
. . . T0610 = single dimensional - null class
. . . T0611 = single dimensional - negative size
. . . T0612 = single dimensional - normal
. . newProxy
. . . null class
. . . null handler
. . . normal
. . padEnd
. . . T0622 = null string
. . . T0623 = negative count
. . . T0624 = normal
. . padStart
. . . T0619 = null string
. . . T0620 = negative count
. . . T0621 = normal
. . parseBigDecimal
. . . T0625 = null argument
. . . T0626 = bad format
. . . T0627 = normal
. . parseBigInteger
. . . T0628 = null argument
. . . T0629 = bad format
. . . T0630 = normal
. . parseBoolean
. . . T0631 = null argument
. . . T0632 = bad format
. . . T0633 = normal
. . parseByte
. . . T0634 = null argument
. . . T0635 = bad format
. . . T0636 = normal
. . parseDouble
. . . T0637 = null argument
. . . T0638 = bad format
. . . T0639 = normal
. . parseFloat
. . . T0640 = null argument
. . . T0641 = bad format
. . . T0642 = normal
. . parseInt
. . . T0643 = null argument
. . . T0644 = bad format
. . . T0645 = normal
. . parseLong
. . . T0646 = null argument
. . . T0647 = bad format
. . . T0648 = normal
. . parseShort
. . . T0649 = null argument
. . . T0650 = bad format
. . . T0651 = normal
. . print
. . printerr
. . printerrf
. . printerrln
. . printerrln
. . printerrlns
. . printf
. . println
. . println
. . printlns
. . raise
. . . T0652 = null argument
. . . T0703 = normal
. . range
. . . normal
. . readln
. . recall
. . . T0653 = null owner
. . remember
. . . T0654 = null owner
. . reset
. . . T0655 = null argument
. . . normal
. . rethrow
. . . T0656 = null argument
. . . T0702 = normal
. . set
. . . T0680 = null array - boolean[]
. . . T0681 = null array - char[]
. . . T0682 = null array - byte[]
. . . T0683 = null array - short[]
. . . T0684 = null array - int[]
. . . T0685 = null array - long[]
. . . T0686 = null array - float[]
. . . T0687 = null array - double[]
. . . T0688 = null array - BigInteger[]
. . . T0689 = null array - BigDecimal[]
. . . T0690 = null array - String[]
. . . T0691 = null array - Object[]
. . . T0692 = null list
. . . T0693 = null map
. . .                                                 // TODO: null checks of record forms
. . sort
. . . T0659 = null array
. . . T0660 = null comparator
. . . normal
. . str
. . . T0662 = form iterable - null iterable
. . . T0663 = form iterable - null prefix
. . . T0664 = form iterable - null separator
. . . T0665 = form iterable - null suffix
. . . T0700 = form object - normal
. . . T0701 = form iterable - normal
. . sum
. . . T0666 = null values
. . . T0667 = null value
. . . T0699 = normal
. . sync
. . . T0668 = null lock
. . . T0669 = null action
. . . normal
. . unescape
. . . T0670 = null argument
. . . normal
. . unique
. . . T0698 = normal
. . unmodifiable
. . . T0672 = null - List
. . . T0673 = null - Set
. . . T0674 = null - Map
. . . T0695 = normal - List
. . . T0696 = normal - Set
. . . T0697 = normal - Map
. . zfill
. . . T0675 = null string
. . . T0676 = negative length
. . . T0677 = normal
. . zip
. . . T0678 = null argument
. . . T0679 = normal         // TODO


. autumn.util.functors
. . Action
. . Function0
. . Function1
. . Function2
. . Function3
. . Function4
. . Function5
. . Function6
. . Function7
. . Function8
. . Function9
. . Ordering
. . Predicate
. . ProxyHandler

. autumn.util.test
. . T0218 = Test Cases, Test Results, and most of UnitTester
. . T0219 = UnitTester - Load Non-Existent Class

