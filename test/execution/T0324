module Main in program;

@Start
defun main (args : String[]) : void
{
    var x = 17BI;

    # A big-integer literal must create a BigInteger object.
    assert F::str(x) == "17";
    assert x.getClass() == (class BigInteger);



    # A big-integer literal can be negative.
    x = -13BI;
    assert F::str(x) == "-13";



    # A big-integer literal can be larger than a long.
    x = 100000000000000000000000000000000000000000000000000000000000000000BI;
    assert F::str(x) == "100000000000000000000000000000000000000000000000000000000000000000";



    # A big-integer literal can contain underscores.
    x = 1_2__3_4BI;
    assert F::str(x) == "1234";
}