module Main in execution;

tuple T (a : boolean,
         b : char,
         c : byte,
         d : short,
         e : int,
         f : long,
         g : float,
         h : double,
         i : String);

@Start
defun main (args : String[]) : void
{
    val t = T::instance().mutable();

    assert t.isMutable();

    assert t.a() == false;
    assert t.b() == 0C;
    assert t.c() == 0B;
    assert t.d() == 0S;
    assert t.e() == 0;
    assert t.f() == 0L;
    assert t.g() == 0.0F;
    assert t.h() == 0.0;
    assert t.i() == null;

    val m1 = t.a (true);
    val m2 = m1.b ('X');
    val m3 = m2.c (10B);
    val m4 = m3.d (20S);
    val m5 = m4.e (30);
    val m6 = m5.f (40L);
    val m7 = m6.g (50.0F);
    val m8 = m7.h (60.0);
    val m9 = m8.i ("Venus");

    assert t.toString() == "(true, X, 10, 20, 30, 40, 50.0, 60.0, Venus)";

    assert m1.isMutable();
    assert m2.isMutable();
    assert m3.isMutable();
    assert m4.isMutable();
    assert m5.isMutable();
    assert m6.isMutable();
    assert m7.isMutable();
    assert m8.isMutable();
    assert m9.isMutable();

    assert t === m1;
    assert t === m2;
    assert t === m3;
    assert t === m4;
    assert t === m5;
    assert t === m6;
    assert t === m7;
    assert t === m8;
    assert t === m9;
}