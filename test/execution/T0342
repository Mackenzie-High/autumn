module Main in execution;

@Start
defun main (args : String[]) : void
{
    var s = new StringBuilder();

    My::catcher(s, 0);
    My::catcher(s, 1);
    My::catcher(s, 2);
    My::catcher(s, 3);
    My::catcher(s, 4);

    assert "0XYZ4" == s.toString();
}

defun catcher (s : StringBuilder,
               n : int) : void
{
    try
    {
        My::thrower(n);

        s.append(n);
    }
    catch (x : RuntimeException)
    {
        s.append("X");
    }
    catch (y : IllegalArgumentException)
    {
        s.append("Y");
    }
    catch (z : IllegalStateException)
    {
        s.append("Z");
    }
}

defun thrower (x : int) : void
{
    when (x == 1) then throw new RuntimeException();

    when (x == 2) then throw new IllegalArgumentException();

    when (x == 3) then throw new IllegalStateException();
}


