module Main in execution;

design Boo
{
    method foo (a : boolean,
                b : char,
                c : byte,
                d : short,
                e : int,
                f : long,
                g : float,
                h : double,
                i : String) : List;
}

@Start
defun main (args : String[]) : void
{
    var p = (create Boo);

    method p.foo => Main::moo;

    val expected = [p, true, 'X', 10B, 20S, 30, 40L, 50.0F, 60.0, "Venus"];

    val actual = (p.foo true, 'X', 10B, 20S, 30, 40L, 50.0F, 60.0, "Venus");

    assert expected == actual;
}

defun moo (self : Prototype,
           a : boolean,
           b : char,
           c : byte,
           d : short,
           e : int,
           f : long,
           g : float,
           h : double,
           i : String) : List
{
    return [self, a, b, c, d, e, f, g, h, i];
}