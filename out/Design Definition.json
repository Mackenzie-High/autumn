{ "summary" : "A design-definition creates a new design-type in the enclosing package.", "ast" : "autumn.lang.compiler.ast.nodes.DesignDefinition", "syntax" : [[0, "@<i>annotation<sub>1</sub></i>"], [0, "@<i>annotation<sub>2</sub></i>"], [0, "@<i>annotation<sub>n</sub></i>"], [0, "<span class=\"keyword\">design</span> <i><a href=\"ConstructPage.html?construct=Name\">name</a></i> ( <i><a href=\"ConstructPage.html?construct=Element\">element</a><sub>1</sub></i> , ... , <i><a href=\"ConstructPage.html?construct=Element\">element</a><sub>n</sub></i> ) ;"], [0, "<hr class=&#92%22syntax-hr&#92%22>"], [0, "@<i>annotation<sub>1</sub></i>"], [0, "@<i>annotation<sub>2</sub></i>"], [0, "@<i>annotation<sub>n</sub></i>"], [0, "<span class=\"keyword\">design</span> <i><a href=\"ConstructPage.html?construct=Name\">name</a></i> ( <i><a href=\"ConstructPage.html?construct=Element\">element</a><sub>1</sub></i> , ... , <i><a href=\"ConstructPage.html?construct=Element\">element</a><sub>n</sub></i> ) <span class=\"keyword\">extends</span> <i><a href=\"ConstructPage.html?construct=TypeSpecifier\">super</a><sub>1</sub></i> & ... & <i><a href=\"ConstructPage.html?construct=TypeSpecifier\">super</a><sub>n</sub></i>;"]], "details" : [[0, "A design is an abstract record-style user-defined datatype."], [0, "Regarding the design-type T created by a definition:"], [1, "T is form of interface-type."], [1, "T is both <a href=\"https://docs.oracle.com/javase/7/docs/api/java/lang/reflect/Modifier.html#PUBLIC\">public</a> and <a href=\"https://docs.oracle.com/javase/7/docs/api/java/lang/reflect/Modifier.html#ABSTRACT\">abstract</a>."], [1, "T is a subtype of interface <a href=\"http://mackenzie-high.github.io/autumn/javadoc/autumn/lang/Record.html\">Record</a>."], [1, "T inherits all the elements that are declared in its supertypes."], [1, "T declares the following methods:"], [2, "For each element E in an instance I of T:"], [3, "T contains a setter method S for element E."], [4, "The name of S is the name of E."], [4, "S takes a single formal-parameter P."], [5, "The static-type of P is the static-type of E."], [4, "The return-type of S is T."], [3, "T contains a getter method G for element E."], [4, "The name of G is the name of E."], [4, "G does not take any formal-parameters."], [4, "The return-type of G is the static-type of element E."], [2, "T declares bridge methods for method set(int, <a href=\"http://docs.oracle.com/javase/7/docs/api/java/lang/Object.html\">Object</a>)."], [3, "For X, where X is T or a supertype thereof, such that X is also a subtype of <a href=\"http://mackenzie-high.github.io/autumn/javadoc/autumn/lang/Record.html\">Record</a>:"], [4, "set(int, <a href=\"http://docs.oracle.com/javase/7/docs/api/java/lang/Object.html\">Object</a>) : X is a bridge method in T."], [2, "T inherits the following method declarations from its supertypes."], [3, "<a href='http://mackenzie-high.github.io/autumn/javadoc/autumn/lang/internals/AbstractRecord.html#compareTo(autumn.lang.Record)'>compareTo (<a href='http://mackenzie-high.github.io/autumn/javadoc/autumn/lang/Record.html'>Record</a>)</a>"], [3, "<a href='http://mackenzie-high.github.io/autumn/javadoc/autumn/lang/internals/AbstractRecord.html#compareTo(java.lang.Object)'>compareTo (<a href='https://docs.oracle.com/javase/7/docs/api/java/lang/Object.html'>Object</a>)</a>"], [3, "<a href='http://mackenzie-high.github.io/autumn/javadoc/autumn/lang/internals/AbstractRecord.html#equals(java.lang.Object)'>equals (<a href='https://docs.oracle.com/javase/7/docs/api/java/lang/Object.html'>Object</a>)</a>"], [3, "<a href='http://mackenzie-high.github.io/autumn/javadoc/autumn/lang/internals/AbstractRecord.html#get(int)'>get (int)</a>"], [3, "<a href='https://docs.oracle.com/javase/7/docs/api/java/lang/Object.html#getClass()'>getClass ()</a>"], [3, "<a href='http://mackenzie-high.github.io/autumn/javadoc/autumn/lang/internals/AbstractRecord.html#hashCode()'>hashCode ()</a>"], [3, "<a href='http://mackenzie-high.github.io/autumn/javadoc/autumn/lang/internals/AbstractRecord.html#isEmpty()'>isEmpty ()</a>"], [3, "<a href='http://mackenzie-high.github.io/autumn/javadoc/autumn/lang/internals/AbstractRecord.html#isStruct()'>isStruct ()</a>"], [3, "<a href='http://mackenzie-high.github.io/autumn/javadoc/autumn/lang/internals/AbstractRecord.html#isTuple()'>isTuple ()</a>"], [3, "<a href='http://mackenzie-high.github.io/autumn/javadoc/autumn/lang/internals/AbstractRecord.html#iterator()'>iterator ()</a>"], [3, "<a href='http://mackenzie-high.github.io/autumn/javadoc/autumn/lang/internals/AbstractRecord.html#keys()'>keys ()</a>"], [3, "<a href='https://docs.oracle.com/javase/7/docs/api/java/lang/Object.html#notify()'>notify ()</a>"], [3, "<a href='https://docs.oracle.com/javase/7/docs/api/java/lang/Object.html#notifyAll()'>notifyAll ()</a>"], [3, "<a href='http://mackenzie-high.github.io/autumn/javadoc/autumn/lang/internals/AbstractRecord.html#set(int, java.lang.Object)'>set (int, <a href='https://docs.oracle.com/javase/7/docs/api/java/lang/Object.html'>Object</a>)</a>"], [3, "<a href='http://mackenzie-high.github.io/autumn/javadoc/autumn/lang/internals/AbstractRecord.html#size()'>size ()</a>"], [3, "<a href='http://mackenzie-high.github.io/autumn/javadoc/autumn/lang/internals/AbstractRecord.html#toString()'>toString ()</a>"], [3, "<a href='http://mackenzie-high.github.io/autumn/javadoc/autumn/lang/internals/AbstractRecord.html#types()'>types ()</a>"], [3, "<a href='http://mackenzie-high.github.io/autumn/javadoc/autumn/lang/internals/AbstractRecord.html#values()'>values ()</a>"], [3, "<a href='https://docs.oracle.com/javase/7/docs/api/java/lang/Object.html#wait()'>wait ()</a>"], [3, "<a href='https://docs.oracle.com/javase/7/docs/api/java/lang/Object.html#wait(long)'>wait (long)</a>"], [3, "<a href='https://docs.oracle.com/javase/7/docs/api/java/lang/Object.html#wait(long, int)'>wait (long, int)</a>"]], "static-checks" : [["DUPLICATE_ANNOTATION", "Each annotation in an annotation-list must be uniquely typed.", "null"], ["DUPLICATE_ANNOTATION", "Each annotation in an annotation-list must be uniquely typed.", "null"], ["DUPLICATE_TYPE", "No two types can share the same descriptor.", "null"], ["DUPLICATE_ELEMENT", "The <i>name</i> of each element must be unique within the enclosing definition.", "null"], ["NO_SUCH_TYPE", "The type specified by <i>element.type</i> must exist.", "null"], ["INACCESSIBLE_TYPE", "The type specified by <i>element.type</i> must be accessible.", "null"], ["EXPECTED_VARIABLE_TYPE", "The <i>type</i> of each <i>element</i> must be a variable-type.", "null"], ["RETYPED_ELEMENT", "The type of an element must be the same in all the declarations of the element.", "null"], ["NAME_CONFLICT", "The name of an element cannot be the name of a predefined method.", "null"]], "example-1" : ["module Main in execution;%0A%0Adesign Taxable (income : int, rate : int);%0A%0Adesign Human (name : String);%0A%0Adesign Citizen () extends Human & Taxable;%0A%0Astruct Employee (title : String) extends Citizen;%0A%0A@Start%0Adefun main (args : String[]) : void%0A{%0A    var p = Employee::instance();%0A%0A    p = p.name(%22Sarah%22);%0A    p = p.income(75_000);%0A    p = p.rate(30);%0A    p = p.title(%22Virologist%22);%0A    %0A    F::println (p);%0A}", "(75000, Sarah, 30, Virologist)"] }