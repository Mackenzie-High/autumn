{ "summary" : "A module is a component of a compilation-unit that usually corresponds to a source file.", "ast" : "autumn.lang.compiler.ast.nodes.Module", "syntax" : [[0, "<i>member<sub>1</sub></i>"], [0, "<i>member<sub>2</sub></i>"], [0, "<i>member<sub>n</sub></i>"]], "details" : [[0, "A member can be an import-directive."], [0, "A member can be the definition of an annotation."], [0, "A member can be the definition of an exception."], [0, "A member can be the definition of an enum."], [0, "A member can be the definition of a design."], [0, "A member can be the definition of a function."], [0, "A module corresponds to a final class that contains static methods."]], "static-checks" : [["DUPLICATE_MODULE_DIRECTIVE", "A module can only contain one module-directive.", "null"], ["DUPLICATE_FUNCTION", "No two functions in the same module can share their name and parameter-list descriptor.", "null"]], "example-1" : ["module Main in examples;%0A%0A@Start%0Adefun main (args : String[]) : void%0A{%0A    (F::println %22Hello World!%22);%0A}", "Hello World!"] }