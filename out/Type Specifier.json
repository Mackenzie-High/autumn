{ "summary" : "A type-specifier specifies a type by its name and dimensions.", "ast" : "autumn.lang.compiler.ast.nodes.TypeSpecifier", "syntax" : [[0, ""]], "details" : [[0, "If the number of dimensions is non-zero, then an array-type is specified."], [0, "One cannot specify the null-type using a type-specifier."]], "static-checks" : [], "example-1" : ["module Main in execution;%0A%0A%0A@Start%0Adefun main (args : String[]) : void%0A{%0A    # Primitive Type%0A    # Type Specifier: int%0A    val type1 = class int;%0A%0A    # Array Type: 1-Dimensional%0A    # Type Specifier: int[]%0A    val type2 = class int[];%0A%0A    # Array Type: 2-Dimensional%0A    # Type Specifier: int[][]%0A    val type3 = class int;%0A%0A    # Array Type: 3-Dimensional%0A    # Type Specifier: int[][][]%0A    val type4 = class int[][][];%0A%0A    # Reference Type%0A    # Type Specifier: String%0A    val type5 = class String;%0A%0A    # Fully Qualified%0A    val type6 = class java.lang.String;%0A}", ""] }