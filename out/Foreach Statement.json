{ "summary" : "A foreach-statement is a loop that iterates over the elements in an iterable entity, such as a data-structure.", "ast" : "autumn.lang.compiler.ast.nodes.ForeachStatement", "syntax" : [[0, "<span class=\"keyword\">foreach</span> ( <i><a href=\"ConstructPage.html?construct=Variable\">assignee</a></i> : <i><a href=\"ConstructPage.html?construct=TypeSpecifier\">type</a></i> <span class=\"keyword\">in</span> <i><a href=\"TextPage.html?page=Expression\">iterable</a></i> )"], [0, "{"], [1, "<i><a href=\"TextPage.html?page=Statement\">body</a></i>"], [0, "}"]], "details" : [[0, "The scope of the <i>assignee</i> is anywhere in the enclosing function."], [0, "The <i>assignee</i> is alive precisely during an activation of the enclosing function."], [0, "The <i>assignee</i> is a readonly variable."], [0, "The <i>body</i> of a loop can contain break-statements."], [0, "The <i>body</i> of a loop can contain continue-statements."], [0, "The <i>body</i> of a loop can contain redo-statements."], [0, "A <a href=\"http://docs.oracle.com/javase/7/docs/api/java/lang/ClassCastException.html\">ClassCastException</a> will result at runtime, if the value returned by the iterator cannot be cast to the specified <i>type</i>."]], "checks" : [["DUPLICATE_VARIABLE", "The <i>assignee</i> cannot share its name with another variable declared in the same scope.", "null"], ["NO_SUCH_TYPE", "The type specified by <i><i>type</i></i> must exist.", "null"], ["INACCESSIBLE_TYPE", "The type specified by <i><i>type</i></i> must be accessible.", "null"], ["EXPECTED_REFERENCE_TYPE", "The type specified by the <i>type</i> must be a reference-type.", "null"], ["EXPECTED_ITERABLE", "The type of the <i>iterable</i> must be a subtype of <a href=\"http://docs.oracle.com/javase/7/docs/api/java/lang/Iterable.html\">Iterable</a>.", "null"]], "example-1" : [1, "module Main in examples;%0A%0A@Start%0Adefun main (args : String[]) : void%0A{%0A    var pets = [%22Jet%22, %22Fluffy%22, %22Eyeball%22, %22Molly%22];%0A%0A    foreach (x : String in pets)%0A    {%0A        (F::print %22Pet Name = %22);%0A        (F::println x);%0A    }%0A}", "Pet Name = Jet%0APet Name = Fluffy%0APet Name = Eyeball%0APet Name = Molly"] }