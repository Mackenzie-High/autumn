{ "summary" : "This operator performs a logical XOR-operation.", "ast" : "autumn.lang.compiler.ast.nodes.XorOperation", "syntax" : [[E-32, "<i><a href=\"TextPage.html?page=Expression\">left</a></i> ^ <i><a href=\"TextPage.html?page=Expression\">right</a></i>"]], "details" : [[E-32, "Precedence: 7"], [E-32, "Associativity: Left"], [E-32, "Both operands are greedily evaluated."], [1, "The left-operand is evaluated first."], [1, "The right-operand is evaluated second."], [E-32, "Return Type: boolean"], [E-32, "Return true when the left-operand is true or the right-operand is true."]], "static-checks" : [["EXPECTED_CONDITION", "The type of the left-operand must be either boolean or <a href=\"http://docs.oracle.com/javase/7/docs/api/java/lang/Boolean.html\">Boolean</a>.", "null"], ["EXPECTED_CONDITION", "The type of the right-operand must be either boolean or <a href=\"http://docs.oracle.com/javase/7/docs/api/java/lang/Boolean.html\">Boolean</a>.", "null"]], "example-1" : ["module Main in examples;%0A%0A@Start%0Adefun main (args : String[]) : void%0A{%0A    val case1 = false ^ false;%0A    val case2 = false ^ true;%0A    val case3 = true ^ false;%0A    val case4 = true ^ true;%0A%0A    F::println(%22F ^ F = %22 .. case1);%0A    F::println(%22F ^ T = %22 .. case2);%0A    F::println(%22T ^ F = %22 .. case3);%0A    F::println(%22T ^ T = %22 .. case4);%0A}", "F ^ F = false%0AF ^ T = true%0AT ^ F = true%0AT ^ T = false"] }