{ "summary" : "This operator performs a string concatenation operation.", "ast" : "autumn.lang.compiler.ast.nodes.ConcatOperation", "syntax" : [[0, "<i><a href=\"TextPage.html?page=Expression\">left</a></i> .. <i><a href=\"TextPage.html?page=Expression\">right</a></i>"]], "details" : [[0, "Precedence: 5"], [0, "Associativity: Left"], [0, "Predefined Overload:"], [1, "(<a href=\"http://docs.oracle.com/javase/7/docs/api/java/lang/Object.html\">Object</a> .. <a href=\"http://docs.oracle.com/javase/7/docs/api/java/lang/Object.html\">Object</a>) &$8614; String"], [0, "The operands will be boxed when necessary."], [0, "Both operands are greedily evaluated."], [1, "The left-operand is evaluated first."], [1, "The right-operand is evaluated second."], [0, "Return Type: <a href='https://docs.oracle.com/javase/7/docs/api/java/lang/String.html'>String</a>"], [0, "Return the string representation of the left-operand prepended onto the string-representation of the right-operand.."]], "static-checks" : [["NO_SUCH_BINARY_OPERATOR", "None of the overloads will accept the left-operand due to its type.", "null"], ["NO_SUCH_BINARY_OPERATOR", "None of the overloads will accept the right-operand due to its type.", "null"]], "example-1" : ["module Main in examples;%0A%0A@Start%0Adefun main (args : String[]) : void%0A{%0A    val output = %22X %22 .. 2 .. %22 Y %22 .. 3 .. %22 Z%22;%0A%0A    F::println(output);%0A}", "X 2 Y 3 Z"] }