{ "summary" : "A throw-statement throws an exception that is provided as an argument thereto.", "ast" : "autumn.lang.compiler.ast.nodes.ThrowStatement", "syntax" : [[0, "<span class=\"keyword\">throw</span> <i><a href=\"TextPage.html?page=Expression\">argument</a></i> ;"]], "details" : [[0, "In order to catch an exception, use a <a href=\"ConstructPage.html?construct=Try-Catch Statement\">Try-Catch Statement</a>."], [0, "An uncaught exception will cause the enclosing invocation to terminate."], [1, "An uncaught exception will propogate until it is caught."], [1, "If an exception is caught by the runtime, then the program will be terminated."]], "static-checks" : [["EXPECTED_THROWABLE", "The type of <i>argument</i> must be assignable to type java.lang.Throwable.", "null"]], "example-1" : ["module Main in examples;%0A%0A@Start%0Adefun main (args : String[]) : void%0A{%0A    # This example shows how to throw and catch an exception. %0A%0A    try%0A    {%0A        F::println (%22before%22);%0A%0A        throw new Exception();%0A%0A        F::println (%22after%22);%0A    }%0A    catch (ex : Exception)%0A    {%0A        F::println (%22handle%22);%0A    }%0A}", "before%0Ahandle"], "example-2" : ["module Main in examples;%0A%0A@Start%0Adefun main (args : String[]) : void%0A{%0A    # An exception can cause an invocation to terminate early.%0A%0A    try%0A    {%0A        F::println (%22before%22);%0A%0A        Main::trouble();%0A%0A        F::println (%22after%22);%0A    }%0A    catch (ex : Exception)%0A    {%0A        F::println (%22handle%22);%0A    }%0A}%0A%0Adefun trouble () : void%0A{%0A    F::println (%22enter%22);%0A%0A    throw new Exception();%0A%0A    F::println (%22exit%22);%0A}", "before%0Aenter%0Ahandle"], "example-3" : ["module Main in examples;%0A%0A@Start%0Adefun main (args : String[]) : void%0A{%0A    # Exceptions can propagate through multiple invocations.%0A%0A    try%0A    {%0A        F::println (%22before%22);%0A%0A        Main::trouble(0);%0A%0A        F::println (%22after%22);%0A    }%0A    catch (ex : Exception)%0A    {%0A        F::println (%22handle%22);%0A    }%0A}%0A%0Adefun trouble (n : int) : void%0A{%0A    F::println (%22enter%22);%0A%0A    if (n == 5)%0A    {%0A        throw new Exception();%0A    }%0A    else%0A    {%0A        Main::trouble(n + 1);%0A    }%0A%0A    F::println (%22exit%22);%0A}", "before%0Aenter%0Aenter%0Aenter%0Aenter%0Aenter%0Aenter%0Ahandle"], "example-4" : ["module Main in examples;%0A%0A@Start%0Adefun main (args : String[]) : void%0A{%0A    # This throw will crash the entire program,%0A    # because the exception is caught by the runtime.%0A%0A    throw new Exception();%0A}", "0"] }