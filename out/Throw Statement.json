{ "summary" : "A throw-statement throws an exception that is provided as an argument thereto.", "ast" : "autumn.lang.compiler.ast.nodes.ThrowStatement", "syntax" : [[0, "<span class=\"keyword\">throw</span> <i><a href=\"TextPage.html?page=Expression\">argument</a></i> ;"]], "details" : [[0, "In order to catch a thrown exception, use a <a href=\"ConstructPage.html?construct=Try-Catch Statement\">Try-Catch Statement</a>."], [0, "An uncaught exception will cause the enclosing invocation to terminate."], [1, "An uncaught exception will propogate until it is caught."], [1, "If an exception is caught by the runtime, then the program will be terminated."]], "static-checks" : [["EXPECTED_THROWABLE", "The type of <i>argument</i> must be assignable to type java.lang.Throwable.", "null"]], "example-0" : ["module Main in examples;%0A%0A@Start%0Adefun main (args : String[]) : void%0A{%0A    # This throw will crash the entire program,%0A    # because the exception is caught by the runtime.%0A%0A    throw new Exception();%0A}", "java.lang.Exception%0A	at examples.Main.main(file:/media/disk/Code/EclipseProjects/AutumnSpecification/autumn/examples/E0099/project/src/Main.leaf:9)%0A	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)%0A	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)%0A	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)%0A	at java.lang.reflect.Method.invoke(Method.java:606)%0A	at autumn.lang.compiler.DynamicLoader.invokeMain(DynamicLoader.java:97)%0A	at autumn.lang.compiler.Autumn.run(Autumn.java:381)%0A	at autumn.lang.compiler.Autumn.run(Autumn.java:397)%0A	at high.mackenzie.autumn.lang.compiler.args.Visitor$1.invoke(Visitor.java:262)%0A	at high.mackenzie.autumn.lang.compiler.args.Visitor.run(Visitor.java:135)%0A	at high.mackenzie.autumn.lang.compiler.args.Visitor.visit_case_run(Visitor.java:266)%0A	at high.mackenzie.autumn.lang.compiler.args.AbstractVisitor.visit(AbstractVisitor.java:29)%0A	at high.mackenzie.autumn.lang.compiler.args.Visitor.visitChildren(Visitor.java:61)%0A	at high.mackenzie.autumn.lang.compiler.args.Visitor.visitUnknown(Visitor.java:192)%0A	at high.mackenzie.autumn.lang.compiler.args.AbstractVisitor.visit_cases(AbstractVisitor.java:193)%0A	at high.mackenzie.autumn.lang.compiler.args.AbstractVisitor.visit(AbstractVisitor.java:26)%0A	at high.mackenzie.autumn.lang.compiler.args.Visitor.visitChildren(Visitor.java:61)%0A	at high.mackenzie.autumn.lang.compiler.args.Visitor.visitUnknown(Visitor.java:192)%0A	at high.mackenzie.autumn.lang.compiler.args.AbstractVisitor.visit_accept(AbstractVisitor.java:83)%0A	at high.mackenzie.autumn.lang.compiler.args.AbstractVisitor.visit(AbstractVisitor.java:24)%0A	at high.mackenzie.autumn.lang.compiler.args.Visitor.visitChildren(Visitor.java:61)%0A	at high.mackenzie.autumn.lang.compiler.args.Visitor.visitUnknown(Visitor.java:192)%0A	at high.mackenzie.autumn.lang.compiler.args.AbstractVisitor.visit(AbstractVisitor.java:43)%0A	at high.mackenzie.autumn.lang.compiler.args.Visitor.visitChildren(Visitor.java:61)%0A	at high.mackenzie.autumn.lang.compiler.args.Visitor.visitUnknown(Visitor.java:192)%0A	at high.mackenzie.autumn.lang.compiler.args.AbstractVisitor.visit_line(AbstractVisitor.java:223)%0A	at high.mackenzie.autumn.lang.compiler.args.AbstractVisitor.visit(AbstractVisitor.java:23)%0A	at high.mackenzie.autumn.Main.main(Main.java:46)"] }