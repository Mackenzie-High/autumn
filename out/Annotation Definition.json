{ "summary" : "An annotation-definition creates a new annotation-type in the enclosing package.", "ast" : "autumn.lang.compiler.ast.nodes.AnnotationDefinition", "syntax" : [[0, "@<i>annotation<sub>1</sub></i>"], [0, "@<i>annotation<sub>2</sub></i>"], [0, "@<i>annotation<sub>n</sub></i>"], [0, "<span class=\"keyword\">annotation</span> <i><a href=\"ConstructPage.html?construct=Name\">name</a></i> ;"]], "details" : [[0, "The new type has public-access."], [0, "<a href=\"http://docs.oracle.com/javase/7/docs/api/java/lang/Object.html\">Object</a> is the direct super of the new type."], [0, "<a href=\"http://docs.oracle.com/javase/7/docs/api/java/lang/annotation/Annotation.html\">Annotation</a> is a direct superinterface of the new type."], [0, "The <a href=\"http://docs.oracle.com/javase/7/docs/api/java/lang/annotation/RetentionPolicy.html\">RetentionPolicy</a> of the new type is runtime."], [0, "The new type does not directly define any fields, constructors, or methods."]], "static-checks" : [["DUPLICATE_ANNOTATION", "Each annotation in an annotation-list must be uniquely typed.", "null"], ["DUPLICATE_TYPE", "No two types can share the same descriptor.", "null"]], "example-1" : ["module Main in examples;%0A%0Aannotation Alien;%0A%0A@Alien%0A@Start%0Adefun main (args : String[]) : void%0A{%0A    val owner = (class Main);%0A    val name = %22main%22;%0A    val params = [ (class String[]) ];%0A%0A    val func = (Reflect::getMethod owner, name, params);%0A%0A    val applied = (func.isAnnotationPresent (class Alien));%0A%0A    (F::println %22@Alien Present = %22 .. applied);%0A}", "@Alien Present = true"], "example-2" : ["module Main in examples;%0A%0Aimport java.lang.reflect.Modifier;%0A%0Aannotation Alien;%0A%0A@Start%0Adefun main (args : String[]) : void%0A{%0A    val klass = (class Alien);%0A%0A    val modifiers = (Modifier::toString (klass.getModifiers));%0A%0A    (F::println %22Name = %22 .. (klass.getName));%0A%0A    (F::println %22Annotation? = %22 .. (klass.isAnnotation));%0A%0A    (F::println %22Modifiers = %22 .. modifiers);%0A}", "Name = examples.Alien%0AAnnotation? = true%0AModifiers = public abstract interface"] }