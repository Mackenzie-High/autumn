{ "summary" : "This operator performs an arithmetic subtraction operation.", "ast" : "autumn.lang.compiler.ast.nodes.SubtractOperation", "syntax" : [[E-32, "<i><a href=\"TextPage.html?page=Expression\">left</a></i> - <i><a href=\"TextPage.html?page=Expression\">right</a></i>"]], "details" : [[E-32, "Precedence: 4"], [E-32, "Associativity: Left"], [E-32, "Predefined Overloads:"], [1, "(char - char) &$8614; char"], [1, "(byte - byte) &$8614; byte"], [1, "(short - short) &$8614; short"], [1, "(int - int) &$8614; int"], [1, "(long - long) &$8614; long"], [1, "(float - float) &$8614; float"], [1, "(double - double) &$8614; double"], [1, "(<a href=\"http://docs.oracle.com/javase/7/docs/api/java/math/BigInteger.html\">BigInteger</a> - <a href=\"http://docs.oracle.com/javase/7/docs/api/java/math/BigInteger.html\">BigInteger</a>) &$8614; <a href=\"http://docs.oracle.com/javase/7/docs/api/java/math/BigInteger.html\">BigInteger</a>"], [1, "(<a href=\"http://docs.oracle.com/javase/7/docs/api/java/math/BigDecimal.html\">BigDecimal</a> - <a href=\"http://docs.oracle.com/javase/7/docs/api/java/math/BigDecimal.html\">BigDecimal</a>) &$8614; <a href=\"http://docs.oracle.com/javase/7/docs/api/java/math/BigDecimal.html\">BigDecimal</a>"], [E-32, "The overload that best matches the operands will be selected."], [1, "Unboxing will be performed, if necessary."], [1, "Coercion will be performed, if necessary."], [E-32, "Both operands are greedily evaluated."], [1, "The left-operand is evaluated first."], [1, "The right-operand is evaluated second."], [E-32, "Return Type: Return-Type of Selected Overload"], [E-32, "Return the result of the operation."]], "static-checks" : [["NO_SUCH_BINARY_OPERATOR", "None of the overloads will accept the left-operand due to its type.", "null"], ["NO_SUCH_BINARY_OPERATOR", "None of the overloads will accept the right-operand due to its type.", "null"]], "example-1" : ["module Main in examples;%0A%0A@Start%0Adefun main (args : String[]) : void%0A{%0A    var value = null as Object;%0A%0A    value = 67C - 2C;%0A    F::println(%22char = %22 .. value);%0A%0A    value = 10B - 2B;%0A    F::println(%22byte = %22 .. value);%0A%0A    value = 10S - 2S;%0A    F::println(%22short = %22 .. value);%0A%0A    value = 10 - 2;%0A    F::println(%22int = %22 .. value);%0A%0A    value = 10L - 2L;%0A    F::println(%22long = %22 .. value);%0A%0A    value = 10.0F - 2.0F;%0A    F::println(%22float = %22 .. value);%0A%0A    value = 10.0 - 2.0;%0A    F::println(%22double = %22 .. value);%0A%0A    value = F::big(10L) - F::big(2L);%0A    F::println(%22BigInteger = %22 .. value);%0A%0A    value = F::big(10.0) - F::big(2.0);%0A    F::println(%22BigDecimal = %22 .. value);%0A}", "char = A%0Abyte = 8%0Ashort = 8%0Aint = 8%0Along = 8%0Afloat = 8.0%0Adouble = 8.0%0ABigInteger = 8.00000000000000000000000000000000%0ABigDecimal = 8.00000000000000000000000000000000"] }