{ "summary" : "This function converts a number to a <a href=\"http://docs.oracle.com/javase/7/docs/api/java/math/BigDecimal.html\">BigDecimal</a>.", "signature" : "big (value : <a href='https://docs.oracle.com/javase/7/docs/api/java/lang/Object.html'>Object</a>) : <a href='https://docs.oracle.com/javase/7/docs/api/java/math/BigDecimal.html'>BigDecimal</a>", "formals" : [["value", "class java.lang.Object", "is the number to convert."]], "returns" : ["<a href='https://docs.oracle.com/javase/7/docs/api/java/math/BigDecimal.html'>BigDecimal</a>", "Return the <i>value</i> as a $JavaMathBigDecimal$."], "throws" : [["<a href='https://docs.oracle.com/javase/7/docs/api/java/lang/NullPointerException.html'>NullPointerException</a>", "if <i>value</i> is null."], ["<a href='https://docs.oracle.com/javase/7/docs/api/java/lang/IllegalArgumentException.html'>IllegalArgumentException</a>", "if the conversion is not possible."]], "details" : [[0, "A value may be of any of the following types:"], [1, "<a href=\"http://docs.oracle.com/javase/7/docs/api/java/lang/Character.html\">Character</a>"], [1, "<a href=\"http://docs.oracle.com/javase/7/docs/api/java/lang/Byte.html\">Byte</a>"], [1, "<a href=\"http://docs.oracle.com/javase/7/docs/api/java/lang/Short.html\">Short</a>"], [1, "<a href=\"http://docs.oracle.com/javase/7/docs/api/java/lang/Integer.html\">Integer</a>"], [1, "<a href=\"http://docs.oracle.com/javase/7/docs/api/java/lang/Long.html\">Long</a>"], [1, "<a href=\"http://docs.oracle.com/javase/7/docs/api/java/lang/Float.html\">Float</a>"], [1, "<a href=\"http://docs.oracle.com/javase/7/docs/api/java/lang/Double.html\">Double</a>"], [1, "<a href=\"http://docs.oracle.com/javase/7/docs/api/java/math/BigInteger.html\">BigInteger</a>"], [1, "<a href=\"http://docs.oracle.com/javase/7/docs/api/java/math/BigDecimal.html\">BigDecimal</a>"], [0, "The result will have the same scale as literals created using Autumn."]], "example-1" : ["module Main in execution;%0A%0A@Start%0Adefun main (args : String[]) : void%0A{%0A    F::println(F::big(11C));%0A    F::println();%0A%0A    F::println(F::big(13B));%0A    F::println();%0A%0A    F::println(F::big(15S));%0A    F::println();%0A%0A    F::println(F::big(17));%0A    F::println();%0A%0A    F::println(F::big(19L));%0A    F::println();%0A%0A    F::println(F::big(21.0F));%0A    F::println();%0A%0A    F::println(F::big(23.0));%0A    F::println();%0A%0A    F::println(F::big(25BI));%0A    F::println();%0A%0A    F::println(F::big(27.0BD));%0A    F::println();%0A}", "11.00000000000000000000000000000000%0A%0A13.00000000000000000000000000000000%0A%0A15.00000000000000000000000000000000%0A%0A17.00000000000000000000000000000000%0A%0A19.00000000000000000000000000000000%0A%0A21.00000000000000000000000000000000%0A%0A23.00000000000000000000000000000000%0A%0A25.00000000000000000000000000000000%0A%0A27.00000000000000000000000000000000"] }