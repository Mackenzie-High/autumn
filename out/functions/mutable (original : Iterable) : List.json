{ "summary" : "This function creates an mutable collection from another collection.", "signature" : "mutable (original : <a href='https://docs.oracle.com/javase/7/docs/api/java/lang/Iterable.html'>Iterable</a>) : <a href='https://docs.oracle.com/javase/7/docs/api/java/util/List.html'>List</a>", "formals" : [["original", "interface java.lang.Iterable", "is the data-structure to copy."]], "returns" : ["<a href='https://docs.oracle.com/javase/7/docs/api/java/util/List.html'>List</a>", "Return an iutable copy of the <i>original</i>."], "throws" : [["<a href='https://docs.oracle.com/javase/7/docs/api/java/lang/NullPointerException.html'>NullPointerException</a>", "if <i>original</i> is null."]], "details" : [], "example-1" : ["module Main in execution;%0A%0A@Start%0Adefun main (args : String[]) : void%0A{%0A    val original = new LinkedList([100, 200, 300]);%0A%0A    val copy = F::mutable(original is Iterable);%0A%0A    original.add(400);%0A    copy.add(500);%0A%0A    F::println(original);%0A    F::println(copy);%0A}", "[100, 200, 300, 400]%0A[100, 200, 300, 500]"] }