{ "group" : "Math", "summary" : "This function computes the absolute-value of a number.", "signature" : "abs (value : <a href='https://docs.oracle.com/javase/7/docs/api/java/math/BigInteger.html'>BigInteger</a>) : <a href='https://docs.oracle.com/javase/7/docs/api/java/math/BigInteger.html'>BigInteger</a>", "formals" : [["value", "class java.math.BigInteger", "is the the signed value."]], "returns" : ["<a href='https://docs.oracle.com/javase/7/docs/api/java/math/BigInteger.html'>BigInteger</a>", "Return the absolute-value of the <i>value</i>."], "throws" : [["<a href='https://docs.oracle.com/javase/7/docs/api/java/lang/NullPointerException.html'>NullPointerException</a>", "if <i>value</i> is null."]], "details" : [[0, "This function simply invokes BigInteger.abs()."]], "example-1" : ["module Main in execution;%0A%0A@Start%0Adefun main (args : String[]) : void%0A{%0A    # This is the number whose absolute value will be computed. %0A    var i = -5BI is BigInteger;%0A%0A    while (i < 6BI)%0A    {%0A        # This is the absolute value of the number. %0A        val result = F::abs(i);%0A%0A        # Print the result in a nice human-readable format. %0A        F::println (%22abs(%22 .. i .. %22) = %22 .. result);%0A%0A        i = i + 1BI;%0A    }%0A}", "abs(-5) = 5%0Aabs(-4) = 4%0Aabs(-3) = 3%0Aabs(-2) = 2%0Aabs(-1) = 1%0Aabs(0) = 0%0Aabs(1) = 1%0Aabs(2) = 2%0Aabs(3) = 3%0Aabs(4) = 4%0Aabs(5) = 5"] }