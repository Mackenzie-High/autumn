{ "summary" : "This function retrieves the size of a map.", "signature" : "len (map : <a href='https://docs.oracle.com/javase/7/docs/api/java/util/Map.html'>Map</a>) : int", "formals" : [["map", "interface java.util.Map", "is the map itself."]], "returns" : ["int", "Return the size of the <i>map</i>."], "throws" : [["<a href='https://docs.oracle.com/javase/7/docs/api/java/lang/NullPointerException.html'>NullPointerException</a>", "if <i>map</i> is null."]], "details" : [], "example-1" : ["module Main in execution;%0A%0Atuple Pet (name : String, type : String);%0A%0A@Start%0Adefun main (args : String[]) : void%0A{%0A    # Create some pet objects. %0A    val pet1 = new Pet(%22Lizzy%22,    %22Lizard%22);%0A    val pet2 = new Pet(%22Chicky%22,   %22Chicken%22);%0A    val pet3 = new Pet(%22Jet%22,      %22Dog%22);%0A    val pet4 = new Pet(%22Picky%22,    %22Chicken%22);%0A    val pet5 = new Pet(%22Sikorsky%22, %22Chicken%22);%0A    val pet6 = new Pet(%22Fluffy%22,   %22Cat%22);%0A    val pet7 = new Pet(%22Lucky%22,    %22Chicken%22);%0A    val pet8 = new Pet(%22Eyeball%22,  %22Sheep%22);%0A%0A    # Create a list containing the pets. %0A    val pets = [pet1, pet2, pet3, pet4, pet5, pet6, pet7, pet8];%0A%0A    # Create a transformation that simply extracts the name.%0A    lambda p : Function1 => ($1 is Pet).name();%0A%0A    # Create a list containing the names of the pets. %0A    val names = F::map(p, pets);%0A%0A    # Print the results. %0A    F::printlns(names);%0A}", "Lizzy%0AChicky%0AJet%0APicky%0ASikorsky%0AFluffy%0ALucky%0AEyeball"] }