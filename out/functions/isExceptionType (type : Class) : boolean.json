{ "summary" : "This function determines whether a <a href=\"http://docs.oracle.com/javase/7/docs/api/java/lang/Class.html\">Class</a> represents the type of an exception.", "signature" : "isExceptionType (type : <a href='https://docs.oracle.com/javase/7/docs/api/java/lang/Class.html'>Class</a>) : boolean", "formals" : [["type", "class java.lang.Class", "may be an exception-type."]], "returns" : ["boolean", "Return true, iff <i>type</i> is the type of an exception that was created using Autumn."], "throws" : [["<a href='https://docs.oracle.com/javase/7/docs/api/java/lang/NullPointerException.html'>NullPointerException</a>", "if <i>type</i> is null."]], "details" : [], "example-1" : ["module Main in execution;%0A%0Aenum Places ();%0A%0Aexception Apocalypse extends RuntimeException;%0A%0Adesign Taxable ();%0A%0Astruct Company () extends Taxable;%0A%0Atuple Person () extends Taxable;%0A%0Afunctor Transform (x : int) : int;%0A%0A%0A@Start%0Adefun main (args : String[]) : void%0A{%0A    My::describe(class Start);%0A    My::describe(class Apocalypse);%0A    My::describe(class Taxable);%0A    My::describe(class Company);%0A    My::describe(class Person);%0A    My::describe(class Transform);%0A}%0A%0Adefun describe (klass : Class) : void%0A{%0A    F::println(%22Name = %22 .. klass.getSimpleName());%0A    F::println(%22  Module? = %22 .. F::isModuleType(klass));%0A    F::println(%22  Annotation? = %22 .. F::isAnnotationType(klass));%0A    F::println(%22  Enum? = %22 .. F::isEnumType(klass));%0A    F::println(%22  Exception? = %22 .. F::isExceptionType(klass));%0A    F::println(%22  Record? = %22 .. F::isRecordType(klass));%0A    F::println(%22  Design? = %22 .. F::isDesignType(klass));%0A    F::println(%22  Struct? = %22 .. F::isStructType(klass));%0A    F::println(%22  Tuple? = %22 .. F::isTupleType(klass));%0A    F::println(%22  Functor? = %22 .. F::isFunctorType(klass));%0A    F::println();%0A}", "Name = Start%0A  Module? = false%0A  Annotation? = true%0A  Enum? = false%0A  Exception? = false%0A  Record? = false%0A  Design? = false%0A  Struct? = false%0A  Tuple? = false%0A  Functor? = false%0A%0AName = Apocalypse%0A  Module? = false%0A  Annotation? = false%0A  Enum? = false%0A  Exception? = true%0A  Record? = false%0A  Design? = false%0A  Struct? = false%0A  Tuple? = false%0A  Functor? = false%0A%0AName = Taxable%0A  Module? = false%0A  Annotation? = false%0A  Enum? = false%0A  Exception? = false%0A  Record? = true%0A  Design? = true%0A  Struct? = false%0A  Tuple? = false%0A  Functor? = false%0A%0AName = Company%0A  Module? = false%0A  Annotation? = false%0A  Enum? = false%0A  Exception? = false%0A  Record? = true%0A  Design? = false%0A  Struct? = true%0A  Tuple? = false%0A  Functor? = false%0A%0AName = Person%0A  Module? = false%0A  Annotation? = false%0A  Enum? = false%0A  Exception? = false%0A  Record? = true%0A  Design? = false%0A  Struct? = false%0A  Tuple? = true%0A  Functor? = false%0A%0AName = Transform%0A  Module? = false%0A  Annotation? = false%0A  Enum? = false%0A  Exception? = false%0A  Record? = false%0A  Design? = false%0A  Struct? = false%0A  Tuple? = false%0A  Functor? = true"] }