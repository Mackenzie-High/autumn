{ "group" : "Math", "summary" : "This is the inverse sine function.", "signature" : "asin (value : double) : double", "formals" : [["value", "double", "is the input value."]], "returns" : ["double", "The angle in radians is returned."], "throws" : [], "details" : [[0, "This function simply invokes Math.asin(double)."]], "example-1" : ["module Main in execution;%0A%0A@Start%0Adefun main (args : String[]) : void%0A{%0A    # Get the value of the PI constant.%0A    val PI = field Math::PI;%0A%0A    # Create some angles in radians. %0A    # angle1 = 60 degrees%0A    # angle2 = 30 degrees%0A    # angle3 = 20 degrees%0A    val angle1 = PI / 3.0;%0A    val angle2 = PI / 6.0;%0A    val angle3 = PI / 9.0;%0A%0A    # Print the angles.%0A    F::println(%22Angle #1 = %22 .. angle1);%0A    F::println(%22Angle #2 = %22 .. angle2);%0A    F::println(%22Angle #3 = %22 .. angle3);%0A    F::println();%0A%0A    # Compue some common sines.%0A    val a = F::sin(angle1);%0A    val b = F::sin(angle2);%0A    val c = F::sin(angle3);%0A%0A    # Print the results. %0A    F::println(%22sin(PI / 3) = %22 .. a);%0A    F::println(%22sin(PI / 6) = %22 .. b);%0A    F::println(%22sin(PI / 9) = %22 .. c);%0A    F::println();%0A%0A    # Compute the related arcsines.%0A    val x = F::asin(a);%0A    val y = F::asin(b);%0A    val z = F::asin(c);%0A%0A    # Print the results. %0A    F::println(%22asin(PI / 3) = %22 .. x);%0A    F::println(%22asin(PI / 6) = %22 .. y);%0A    F::println(%22asin(PI / 9) = %22 .. z);%0A    F::println();%0A}", ""] }