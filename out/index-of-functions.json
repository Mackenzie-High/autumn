[["bitwiseAnd (left : int, right : int) : int", "Bitwise"], ["bitwiseAnd (left : long, right : long) : long", "Bitwise"], ["bitwiseCombine (part1 : byte, part2 : byte) : short", "Bitwise"], ["bitwiseCombine (part1 : byte, part2 : byte, part3 : byte, part4 : byte) : int", "Bitwise"], ["bitwiseCombine (part1 : int, part2 : int) : long", "Bitwise"], ["bitwiseCombine (part1 : short, part2 : short) : int", "Bitwise"], ["bitwiseGetBit (value : int, index : int) : boolean", "Bitwise"], ["bitwiseGetBit (value : long, index : int) : boolean", "Bitwise"], ["bitwiseGetByte (value : int, index : int) : byte", "Bitwise"], ["bitwiseGetByte (value : long, index : int) : byte", "Bitwise"], ["bitwiseNot (operand : int) : int", "Bitwise"], ["bitwiseOr (left : int, right : int) : int", "Bitwise"], ["bitwiseOr (left : long, right : long) : long", "Bitwise"], ["bitwiseSetBit (assignee : int, index : int, value : boolean) : int", "Bitwise"], ["bitwiseSetBit (assignee : long, index : int, value : boolean) : long", "Bitwise"], ["bitwiseSetByte (assignee : int, index : int, value : byte) : int", "Bitwise"], ["bitwiseSetByte (assignee : long, index : int, value : byte) : long", "Bitwise"], ["bitwiseShiftLeft (value : int, distance : int) : int", "Bitwise"], ["bitwiseShiftLeft (value : long, distance : int) : long", "Bitwise"], ["bitwiseShiftRight (value : int, distance : int) : int", "Bitwise"], ["bitwiseShiftRight (value : long, distance : int) : long", "Bitwise"], ["bitwiseUnsignedShiftRight (value : int, distance : int) : int", "Bitwise"], ["bitwiseUnsignedShiftRight (value : long, distance : int) : long", "Bitwise"], ["bitwiseXor (left : int, right : int) : int", "Bitwise"], ["bitwiseXor (left : long, right : long) : long", "Bitwise"], ["big (value : String) : BigDecimal", "Conversions"], ["json (module : Module, string : String) : Object", "Conversions"], ["json (object : Object) : String", "Conversions"], ["parseBigDecimal (value : String) : BigDecimal", "Conversions"], ["parseBigInteger (value : String) : BigInteger", "Conversions"], ["parseBoolean (value : String) : boolean", "Conversions"], ["parseByte (value : String) : byte", "Conversions"], ["parseDouble (value : String) : double", "Conversions"], ["parseFloat (value : String) : float", "Conversions"], ["parseInt (value : String) : int", "Conversions"], ["parseLong (value : String) : long", "Conversions"], ["parseShort (value : String) : short", "Conversions"], ["str (iterable : Iterable, prefix : String, separator : String, suffix : String) : String", "Conversions"], ["str (value : Object) : String", "Conversions"], ["clear (record : Record) : Record", "Data Structures"], ["first (list : List) : Object", "Data Structures"], ["get (array : BigDecimal[], index : int) : BigDecimal", "Data Structures"], ["get (array : BigInteger[], index : int) : BigInteger", "Data Structures"], ["get (array : Object[], index : int) : Object", "Data Structures"], ["get (array : String[], index : int) : String", "Data Structures"], ["get (array : boolean[], index : int) : boolean", "Data Structures"], ["get (array : byte[], index : int) : byte", "Data Structures"], ["get (array : char[], index : int) : char", "Data Structures"], ["get (array : double[], index : int) : double", "Data Structures"], ["get (array : float[], index : int) : float", "Data Structures"], ["get (array : int[], index : int) : int", "Data Structures"], ["get (array : long[], index : int) : long", "Data Structures"], ["get (array : short[], index : int) : short", "Data Structures"], ["get (list : List, index : int) : Object", "Data Structures"], ["get (map : Map, key : Object) : Object", "Data Structures"], ["get (owner : Record, index : int) : Object", "Data Structures"], ["get (owner : Record, key : String) : Object", "Data Structures"], ["immutable (value : Collection) : Collection", "Data Structures"], ["immutable (value : List) : List", "Data Structures"], ["immutable (value : Map) : Map", "Data Structures"], ["immutable (value : Set) : Set", "Data Structures"], ["last (list : List) : Object", "Data Structures"], ["len (array : Object[]) : int", "Data Structures"], ["len (array : boolean[]) : int", "Data Structures"], ["len (array : byte[]) : int", "Data Structures"], ["len (array : char[]) : int", "Data Structures"], ["len (array : double[]) : int", "Data Structures"], ["len (array : float[]) : int", "Data Structures"], ["len (array : int[]) : int", "Data Structures"], ["len (array : long[]) : int", "Data Structures"], ["len (array : short[]) : int", "Data Structures"], ["len (list : List) : int", "Data Structures"], ["len (map : Map) : int", "Data Structures"], ["len (record : Record) : int", "Data Structures"], ["len (string : CharSequence) : int", "Data Structures"], ["mutable (value : Collection) : Collection", "Data Structures"], ["mutable (value : List) : List", "Data Structures"], ["mutable (value : Map) : Map", "Data Structures"], ["mutable (value : Set) : Set", "Data Structures"], ["newArray (type : Class, dimensions : List) : Object", "Data Structures"], ["newArray (type : Class, size : int) : Object", "Data Structures"], ["newArrayList () : ArrayList", "Data Structures"], ["newArrayList (elements : Iterable) : ArrayList", "Data Structures"], ["newBigDecimalArray (size : int) : BigDecimal[]", "Data Structures"], ["newBigIntegerArray (size : int) : BigInteger[]", "Data Structures"], ["newBooleanArray (size : int) : boolean[]", "Data Structures"], ["newByteArray (size : int) : byte[]", "Data Structures"], ["newCharArray (size : int) : char[]", "Data Structures"], ["newDoubleArray (size : int) : double[]", "Data Structures"], ["newFloatArray (size : int) : float[]", "Data Structures"], ["newHashMap () : HashMap", "Data Structures"], ["newHashMap (original : Map) : HashMap", "Data Structures"], ["newHashSet () : HashSet", "Data Structures"], ["newHashSet (elements : Iterable) : HashSet", "Data Structures"], ["newIntArray (size : int) : int[]", "Data Structures"], ["newLinkedList () : LinkedList", "Data Structures"], ["newLinkedList (elements : Iterable) : LinkedList", "Data Structures"], ["newList (elements : Iterable) : List", "Data Structures"], ["newLongArray (size : int) : long[]", "Data Structures"], ["newMap (original : Map) : Map", "Data Structures"], ["newObjectArray (size : int) : Object", "Data Structures"], ["newSet (elements : Iterable) : Set", "Data Structures"], ["newShortArray (size : int) : short[]", "Data Structures"], ["newStringArray (size : int) : String[]", "Data Structures"], ["newTreeMap () : TreeMap", "Data Structures"], ["newTreeMap (original : Map) : TreeMap", "Data Structures"], ["newTreeSet () : TreeSet", "Data Structures"], ["newTreeSet (elements : Iterable) : TreeSet", "Data Structures"], ["reversed (iterable : Iterable) : List", "Data Structures"], ["scramble (iterable : Iterable) : List", "Data Structures"], ["set (array : BigDecimal[], index : int, value : BigDecimal) : BigDecimal[]", "Data Structures"], ["set (array : BigInteger[], index : int, value : BigInteger) : BigInteger[]", "Data Structures"], ["set (array : Object[], index : int, value : Object) : Object[]", "Data Structures"], ["set (array : String[], index : int, value : String) : String[]", "Data Structures"], ["set (array : boolean[], index : int, value : boolean) : boolean[]", "Data Structures"], ["set (array : byte[], index : int, value : byte) : byte[]", "Data Structures"], ["set (array : char[], index : int, value : char) : char[]", "Data Structures"], ["set (array : double[], index : int, value : double) : double[]", "Data Structures"], ["set (array : float[], index : int, value : float) : float[]", "Data Structures"], ["set (array : int[], index : int, value : int) : int[]", "Data Structures"], ["set (array : long[], index : int, value : long) : long[]", "Data Structures"], ["set (array : short[], index : int, value : short) : short[]", "Data Structures"], ["set (assignee : Record, value : Record) : Record", "Data Structures"], ["set (assignee : Record, values : Map) : Record", "Data Structures"], ["set (list : List, index : int, value : Object) : List", "Data Structures"], ["set (map : Map, key : int, value : Object) : Map", "Data Structures"], ["set (owner : Record, index : int, value : Object) : Record", "Data Structures"], ["set (owner : Record, name : String, value : Object) : Record", "Data Structures"], ["sorted (iterable : Iterable) : List", "Data Structures"], ["rethrow (exception : Exception) : void", "Exceptions"], ["appendBytes (path : File, content : byte[]) : void", "File IO"], ["appendLines (path : File, content : String, charset : Charset) : void", "File IO"], ["appendText (path : File, content : String, charset : Charset) : void", "File IO"], ["filesOf (folder : File, recurse : boolean) : Iterable", "File IO"], ["readBytes (path : File) : byte[]", "File IO"], ["readLines (path : File, charset : Charset) : List", "File IO"], ["readText (path : File, charset : Charset) : String", "File IO"], ["writeBytes (path : File, content : byte[]) : void", "File IO"], ["writeLines (path : File, content : List, charset : Charset) : void", "File IO"], ["writeText (path : File, content : String, charset : Charset) : void", "File IO"], ["apply (functor : Functor, arguments : Iterable) : Object", "Functors"], ["applyQuietly (functor : Functor, arguments : Iterable) : Object", "Functors"], ["memoize (functor : Functor) : Functor", "Functors"], ["synchronize (functor : Functor) : Functor", "Functors"], ["all (elements : Iterable, condition : Predicate) : boolean", "Higher Order"], ["any (elements : Iterable, condition : Predicate) : boolean", "Higher Order"], ["count (elements : Iterable, condition : Predicate) : int", "Higher Order"], ["filter (elements : Iterable, condition : Predicate) : List", "Higher Order"], ["find (elements : Iterable, condition : Predicate) : Object", "Higher Order"], ["find (elements : Iterable, condition : Predicate, skip : int) : Object", "Higher Order"], ["map (elements : Iterable, functor : FunctionO) : List", "Higher Order"], ["reduce (elements : Iterable, functor : FunctionOO) : Object", "Higher Order"], ["chain (iterables : Iterable) : Iterable", "Iterables"], ["combinationsOf (p : Iterable, r : int, replace : boolean) : Iterable", "Iterables"], ["cycle (iterable : Iterable) : Iterable", "Iterables"], ["iter (input : CharSequence) : Iterable", "Iterables"], ["iter (input : Iterable) : Iterable", "Iterables"], ["iter (input : Object[]) : Iterable", "Iterables"], ["iter (input : boolean[]) : Iterable", "Iterables"], ["iter (input : byte[]) : Iterable", "Iterables"], ["iter (input : char[]) : Iterable", "Iterables"], ["iter (input : double[]) : Iterable", "Iterables"], ["iter (input : float[]) : Iterable", "Iterables"], ["iter (input : int[]) : Iterable", "Iterables"], ["iter (input : long[]) : Iterable", "Iterables"], ["iter (input : short[]) : Iterable", "Iterables"], ["permutatationsOf (p : Iterable, r : int) : Iterable", "Iterables"], ["productOf (values : Iterable) : Iterable", "Iterables"], ["range (minimum : int, maximum : int) : Iterable", "Iterables"], ["range (minimum : int, maximum : int, step : int) : Iterable", "Iterables"], ["abs (value : BigDecimal) : BigDecimal", "Math"], ["abs (value : BigInteger) : BigInteger", "Math"], ["abs (value : double) : double", "Math"], ["abs (value : float) : float", "Math"], ["abs (value : int) : int", "Math"], ["arccos (value : double) : double", "Math"], ["arcsin (value : double) : double", "Math"], ["arctan (value : double) : double", "Math"], ["ceil (value : BigDecimal) : BigDecimal", "Math"], ["ceil (value : double) : double", "Math"], ["cos (angle : double) : double", "Math"], ["floor (value : BigDecimal) : BigDecimal", "Math"], ["floor (value : double) : double", "Math"], ["isEven (value : BigInteger) : boolean", "Math"], ["isEven (value : int) : boolean", "Math"], ["isEven (value : long) : boolean", "Math"], ["isOdd (value : BigInteger) : boolean", "Math"], ["isOdd (value : int) : boolean", "Math"], ["isOdd (value : long) : boolean", "Math"], ["log (value : double) : double", "Math"], ["log10 (value : double) : double", "Math"], ["max (values : Iterable) : Object", "Math"], ["mean (values : Iterable) : BigDecimal", "Math"], ["median (values : Iterable) : Object", "Math"], ["min (values : Iterable) : Object", "Math"], ["mode (values : Iterable) : Object", "Math"], ["pow (x : BigDecimal, n : int) : BigDecimal", "Math"], ["pow (x : BigInteger, n : int) : BigInteger", "Math"], ["pow (x : double, n : int) : double", "Math"], ["pow (x : float, n : int) : float", "Math"], ["pow (x : int, n : int) : int", "Math"], ["pow (x : long, n : int) : long", "Math"], ["round (value : BigDecimal, count : int) : BigDecimal", "Math"], ["round (value : double, count : int) : double", "Math"], ["sin (angle : double) : double", "Math"], ["sqrt (value : BigDecimal) : BigDecimal", "Math"], ["sqrt (value : double) : double", "Math"], ["standardDeviation (values : Iterable) : BigDecimal", "Math"], ["sum (values : Iterable) : BigDecimal", "Math"], ["tan (angle : double) : double", "Math"], ["between (less : Comparable, value : Comparable, greater : Comparable) : Object", "NOS"], ["compare (left : Comparable, right : Comparable) : int", "NOS"], ["defaultValue (type : Class) : Object", "NOS"], ["hash (value : Object) : int", "NOS"], ["recall (target : Object, key : Object) : Object", "NOS"], ["remember (target : Object, key : Object, value : Object) : void", "NOS"], ["unique () : BigInteger", "NOS"], ["operationAdd (left : Object, right : Object) : Object", "Operators"], ["operationDivide (left : Object, right : Object) : Object", "Operators"], ["operationModulo (left : Object, right : Object) : Object", "Operators"], ["operationMultiply (left : Object, right : Object) : Object", "Operators"], ["operationNegate (operand : Object) : Object", "Operators"], ["operationSubtract (left : Object, right : Object) : Object", "Operators"], ["print (value : Object) : void", "Standard IO"], ["printerr (value : Object) : void", "Standard IO"], ["printerrln () : void", "Standard IO"], ["printerrln (value : Object) : void", "Standard IO"], ["printerrlns (lines : Iterable) : void", "Standard IO"], ["println () : void", "Standard IO"], ["println (value : Object) : void", "Standard IO"], ["printlns (lines : Iterable) : void", "Standard IO"], ["readln () : String", "Standard IO"], ["escape (string : String) : String", "Strings"], ["padEnd (string : String, length : int, pad : char) : String", "Strings"], ["padStart (string : String, length : int, pad : char) : String", "Strings"], ["repeat (string : String, count : int) : String", "Strings"], ["unescape (string : String) : String", "Strings"], ["zfill (string : String, length : int) : String", "Strings"]]