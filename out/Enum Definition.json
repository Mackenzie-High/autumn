{ "summary" : "An enum-definition creates a new enum-type in the enclosing package.", "ast" : "autumn.lang.compiler.ast.nodes.EnumDefinition", "syntax" : [[0, "@<i>annotation<sub>1</sub></i>"], [0, "@<i>annotation<sub>2</sub></i>"], [0, "@<i>annotation<sub>n</sub></i>"], [0, "<span class=\"keyword\">enum</span> <i><a href=\"ConstructPage.html?construct=Name\">name</a></i> ( <i><a href=\"ConstructPage.html?construct=Name\">constant</a><sub>1</sub></i> , ... , <i><a href=\"ConstructPage.html?construct=Name\">constant</a><sub>n</sub></i> ) ;"]], "details" : [[0, "Regarding the enum-type T created by a definition:"], [1, "T is both <a href=\"https://docs.oracle.com/javase/7/docs/api/java/lang/reflect/Modifier.html#PUBLIC\">public</a> and <a href=\"https://docs.oracle.com/javase/7/docs/api/java/lang/reflect/Modifier.html#FINAL\">final</a>."], [1, "T is a subtype of class <a href=\"http://docs.oracle.com/javase/7/docs/api/java/lang/Enum.html\">Enum</a>."], [1, "T does not have any direct superinterfaces."], [1, "For each enum-constant X in T, there is a field F in T such that:"], [2, "The name of F is the name of X."], [2, "The type of F is T."], [2, "F is <a href=\"https://docs.oracle.com/javase/7/docs/api/java/lang/reflect/Modifier.html#PUBLIC\">public</a>, <a href=\"https://docs.oracle.com/javase/7/docs/api/java/lang/reflect/Modifier.html#STATIC\">static</a>, and <a href=\"https://docs.oracle.com/javase/7/docs/api/java/lang/reflect/Modifier.html#FINAL\">final</a>."], [2, "F is an enum-constant, according to reflection."], [1, "T declares two <a href=\"https://docs.oracle.com/javase/7/docs/api/java/lang/reflect/Modifier.html#PUBLIC\">public</a> <a href=\"https://docs.oracle.com/javase/7/docs/api/java/lang/reflect/Modifier.html#STATIC\">static</a> methods:"], [2, "values() : T[]"], [3, "This method creates an array of the enum-constants declared in T."], [3, "Each invocation of the method creates a new array instance."], [3, "The elements in the array are in declaration order."], [2, "valueOf(name : String) : T"], [3, "This method retrieves an enum-constant based on its name."], [3, "This method throws a <a href=\"http://docs.oracle.com/javase/7/docs/api/java/lang/NullPointerException.html\">NullPointerException</a>, if name is null."], [3, "This method throws a <a href=\"http://docs.oracle.com/javase/7/docs/api/java/lang/IllegalArgumentException.html\">IllegalArgumentException</a>, if the named enum-constant cannot be found."]], "static-checks" : [["DUPLICATE_ANNOTATION", "Each annotation in an annotation-list must be uniquely typed.", "null"], ["DUPLICATE_TYPE", "No two types can share the same descriptor.", "null"], ["DUPLICATE_CONSTANT", "Enum constants cannot share their name.", "null"]], "example-1" : ["module Main in examples;%0A%0A%0Aenum City ( Paris, London, Rome );%0A%0A%0A@Start%0Adefun main (args : String[]) : void%0A{%0A    My::print((field City::Paris));%0A%0A    My::print((field City::London));%0A%0A    My::print((field City::Rome));%0A}%0A%0A%0Adefun print (constant : Enum) : void%0A{%0A    F::println(%22Name: %22 .. constant.name());%0A    F::println(%22Ordinal: %22 .. constant.ordinal());%0A    F::println();%0A}", "Name: Paris%0AOrdinal: 0%0A%0AName: London%0AOrdinal: 1%0A%0AName: Rome%0AOrdinal: 2"], "example-2" : ["module Main in examples;%0A%0A%0Aenum City ( Paris, London, Rome );%0A%0A%0A@Start%0Adefun main (args : String[]) : void%0A{%0A    My::println(City::valueOf(%22Paris%22));%0A%0A    My::println(City::valueOf(%22London%22));%0A%0A    My::println(City::valueOf(%22Rome%22));%0A}%0A%0A%0Adefun print (constant : Enum) : void%0A{%0A    F::println(%22Name: %22 .. constant.name());%0A    F::println(%22Ordinal: %22 .. constant.ordinal());%0A    F::println();%0A}", "Warning: NO_SUCH_METHOD%0A  File: file:/media/disk/Code/EclipseProjects/AutumnSpecification/autumn/examples/E0055/project/src/Main.leaf%0A  Line: #10%0A  Column: #5%0A  Message: No acceptable method overload was found.%0A  Invocation: Main::println(City)%0A%0AWarning: NO_SUCH_METHOD%0A  File: file:/media/disk/Code/EclipseProjects/AutumnSpecification/autumn/examples/E0055/project/src/Main.leaf%0A  Line: #12%0A  Column: #5%0A  Message: No acceptable method overload was found.%0A  Invocation: Main::println(City)%0A%0AWarning: NO_SUCH_METHOD%0A  File: file:/media/disk/Code/EclipseProjects/AutumnSpecification/autumn/examples/E0055/project/src/Main.leaf%0A  Line: #14%0A  Column: #5%0A  Message: No acceptable method overload was found.%0A  Invocation: Main::println(City)"], "example-3" : ["module Main in examples;%0A%0A%0Aenum City ( Paris, London, Rome );%0A%0A%0A@Start%0Adefun main (args : String[]) : void%0A{%0A    val array = City::values();%0A%0A    for(i = 0; i < F::len(array); i + 1)%0A    {%0A        val constant = F::get(array, i) is Enum;%0A%0A        My::print(constant);%0A    }%0A}%0A%0A%0Adefun print (constant : Enum) : void%0A{%0A    F::println(%22Name: %22 .. constant.name());%0A    F::println(%22Ordinal: %22 .. constant.ordinal());%0A    F::println();%0A}", "Name: Paris%0AOrdinal: 0%0A%0AName: London%0AOrdinal: 1%0A%0AName: Rome%0AOrdinal: 2"] }