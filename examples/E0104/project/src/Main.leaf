module Main in examples;

@Start
defun main (args : String[]) : void
{
    Autumn::enableAssume();

    Main::irs(-1000);
    Main::irs(-2000);
    Main::irs(-3000);

    Main::irs(1000);
    Main::irs(2000);
    Main::irs(3000);

    Autumn::disableAssume();

    Main::irs(-1000);
    Main::irs(-2000);
    Main::irs(-3000);

    Main::irs(1000);
    Main::irs(2000);
    Main::irs(3000);
}

defun irs (income : int) : void
{
    try
    {
        F::println("Income = " .. income);

        val taxes = My::tax(income);

        F::println("Taxes = " .. taxes);
    }
    catch (ex : AssumptionFailedException)
    {
        F::println("Error - Tax Computation Failed");
    }

    F::println();
}

defun tax (income : int) : int
{
    assume income >= 0;

    # Flat Tax of 25%.
    return income / 4; 
}



