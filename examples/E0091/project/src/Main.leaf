module Main in examples;

functor Calculation (x : int) : int;

@Start
defun main (args : String[]) : void
{
    # Create a function object that refers to function square. 
    delegate p : Calculation => My::square;

    # Create a function object that refers to function cube. 
    delegate q : Calculation => My::cube;

    for (i = 0; i < 10; i + 1)
    {
        # Perform a calculation using the first function object.
        val x = My::compute(p, i);

        # Perform a calculation using the second function object.
        val y = My::compute(q, i);

        # Print the two results.
        F::println([x, y]);
    }
}

defun compute (function : Calculation, 
               value : int) : int
{
    return function.invoke(value);
}

defun square (x : int) : int
{
    return x * x;
}

defun cube (x : int) : int
{
    return x * x * x;
}

 

